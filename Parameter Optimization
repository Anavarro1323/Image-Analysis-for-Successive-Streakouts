%Preprocessing

Target = table2array(Targets) 
 OriginalImage = InputRep	%Loads image into workspace
 ThresholdedImage = 340-OriginalImage;
 BW = imbinarize(ThresholdedImage, 'adaptive', 'Sensitivity', 0.500000, 'ForegroundPolarity', 'dark');

 parr =NaN([6 8 10 40]);
for rangemin = [1 6];
    
for rangemax = [7 15];
  range = [rangemin rangemax];
  
 for Sensitivityloop = [0.1:0.1:1];
sense = Sensitivityloop;
     
for maxpixloop = [5:5:205] 
maxpix = maxpixloop; %maxpix at first was 125





%False Positive elimination algorithm
Q1comp = imcomplement(BW);
CC1 = bwconncomp(Q1comp);



labeled11 = labelmatrix(CC1);
labeled12 = label2rgb(labeled11,'jet','w','shuffle');
edges = unique(labeled11);

array1 = cell(CC1.NumObjects,1);

for x =[1:CC1.NumObjects];
if length(CC1.PixelIdxList{1,x}) > maxpix;
array1{x,1} = 1;
else array1{x,1} = 0;
end
end

for x = [1:CC1.NumObjects];
    if array1{x,1} == 1;
labeled11(labeled11 == x) = 0;
    end
end
Q1 = label2rgb(labeled11,'jet','w','shuffle');






%Circle Finding Algorithm
[Q1c,Q1r] = imfindcircles(BW,range,'ObjectPolarity','dark', ...;
'Sensitivity',sense,'Method','twostage');

% figure;imshow(InputRep)
% viscircles(Q1c, Q1r, 'EdgeColor', 'b')


Q1A = times(pi,power(Q1r,2));


A = padcat(Q1A,Target);
[h,pvalue] = ttest2(A(:,1),A(:,2));
%We want to maximize p value 


parr(rangemin,rangemax,fix(times(maxpixloop,0.2)),fix(times(sense,10))) = pvalue;
end


 end
end
end

[C,I] = max(parr(:));
C

[I1,I2,I3,I4] = ind2sub(size(parr),I);
parr(I1,I2,I3,I4)

clc

%Declaration of Ideal Parameters
fprintf('ideal max Range Minimum is')
I1
fprintf('ideal max Range Maximum is')
I2
fprintf('ideal max pixel value is')
times(I3,5)
fprintf('ideal max sensitivity is')
times(sense,0.1)

